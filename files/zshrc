#################
#    INIT
#################

fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i

export PATH="./bin/:$PATH"
export PATH="/usr/local/heroku/bin:/usr/local/bin:/usr/local/sbin:$PATH"
export PATH="$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin"
export PATH="$PATH:$GOPATH/bin"
export PATH="$PATH:/usr/local/sbin/google-cloud-sdk/bin"

[ -f '/usr/local/sbin/google-cloud-sdk/path.zsh.inc' ] && source '/usr/local/sbin/google-cloud-sdk/path.zsh.inc'
[ -f '/usr/local/sbin/google-cloud-sdk/completion.zsh.inc' ] && source '/usr/local/sbin/google-cloud-sdk/completion.zsh.inc'

export EDITOR="vim"
export TERM=screen-256color-bce
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export CLICOLOR=1
export GOPATH=$HOME/go

# support colors in less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# use emacs-style bindings
bindkey -e

# Use ^U to delete everything to the left
bindkey '^U' backward-kill-line

unsetopt correct_all

[ -e ~/.zshrc-private ] && source ~/.zshrc-private
[ -e ~/.z.sh ] && source ~/.z.sh
[ -e ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -e ~/.svnhelpers ] && source ~/.svnhelpers

eval "$(direnv hook zsh)"

. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash


# =============
#    HISTORY
# =============

## Command history configuration
if [ -z "$HISTFILE" ]; then
  HISTFILE=$HOME/.zsh_history
fi

HISTSIZE=1000000
SAVEHIST=1000000

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
# ignore duplication command history list
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
# share command history data
setopt share_history


# =============
#    ALIAS
# =============

alias k="kubectl"
alias ez="vim ~/.zshrc"
alias v="vim ~/.vim/vimrc"
alias vi="vim"
alias reload="exec $SHELL --login"
alias r="bin/rails"
alias t="bin/rails test"
alias be="bundle exec"
alias l="ls -lha"
alias todo="vim ~/Dropbox/.todo"
alias jpdf="/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py"
alias nombom='npm cache clear && bower cache clean && rm -rf node_modules bower_components && npm install && bower install'
alias remove_merged="git branch --merged | grep -v \"\*\" | grep -v master | xargs git branch -d"
alias reset_rabbit="rabbitmqctl stop_app && rabbitmqctl reset && rabbitmqctl start_app"
alias ss="spring stop"
alias htop="sudo htop"
alias mux="tmuxinator"
alias ux="mux"
alias ..="cd .."

# git
alias g="git"
alias ga="g add -A"
alias gb="g branch"
alias gs="g status"
alias gl="g l -30"
alias glm="g l --author=Brian"
alias gc="g commit --verbose"
alias gch="g checkout"
alias gp="g push -u"
alias gpp="gp && gpr"
alias gd="g diff --no-prefix"
alias gdc="g diff --cached --no-prefix"
alias gpr="hub pull-request -o"


# ======================
#    UTILITY FUNCTIONS
# ======================

# Use fzy to select branch to checkout
b() { git checkout `git branch | fzy` }

remove_all_containers() { docker container rm -f $(docker container ps -a -q) }

remove_all_images() { docker image rm -f $(docker images -a -q) }

man() { PAGER="/bin/sh -c \"col -b | vim -R -c 'set ft=man' -\"" command man $@ }

# show processes running on a given port
showp() { lsof -i tcp:$1 }

# kills every process running on a given port
killp() {
  OLD_IFS=$IFS;

  lsof -i :$1 | grep TCP | while IFS= read -r line ; do
    kill -9 `echo $line | awk '{ print $2 }'`;
    echo `echo $line | awk '{ print $1 }'`" killed";
  done

  IFS=$OLD_IFS;
}

# finds process using `fzy` and kill it
kills() {
  kill -9 `ps axww -o pid,user,%cpu,%mem,start,time,command | fzy | sed 's/^ *//' | cut -f1 -d' '`
}

s() {
  if [ -f mix.exs ]; then
    echo "mix phoenix.server $@"
    mix phoenix.server $@
  else
    echo "rails server -b 0.0.0.0 $@"
    rails server -b 0.0.0.0 $@
  fi
}

ff() { find_type "f" $@ }
fl() { find_type "l" $@ }
fd() { find_type "d" $@ }

find_type() {
  search_type=$1
  name=$2
  shift 2
  find . -type $search_type -iname "*$name*" $@
}

pa() { ps aux | ag -i $1 }

ip() { ifconfig -a | grep inet | grep broadcast | awk '{ print $2 }' }

size() { du -sh $@ }

loop() { while [ true ]; do; $@; done; }

# replace_all foo bar
# find "foo" in every file and replace it with "bar"
replace_all() { ag "$1" -l | xargs sed -i '' -e "s/$1/$2/g" }

# kill all suspended jobs
kj() { for id in $(jobs -p | grep "\[\d\]" -o | grep "\d" -o); do disown %$id 2>/dev/null; done }

# =============
#    PROMPT
# =============

autoload -U colors && colors
setopt promptsubst

git_prompt_info () {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "$ZSH_THEME_GIT_PROMPT_PREFIX${ref#refs/heads/}$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

PROMPT='
%{$fg_bold[green]%}${PWD/#$HOME/~}%{$reset_color%}$(git_prompt_info)
$ '

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[black]%} ("
ZSH_THEME_GIT_PROMPT_SUFFIX=")%{$reset_color%}"
