#!/bin/bash

function add_file_status_color() {
  awk '
  {
    if ($1=="C") {
      print "\033[35m" $0 "\033[00m";
    }
    else if ($1=="A") {
      print "\033[32m" $0 "\033[00m";
    }
    else if ($1=="?") {
      print "\033[36m" $0 "\033[00m";
    }
    else if ($1=="D") {
      print "\033[31m" $0 "\033[00m";
    }
    else {
      print $0;
    }
  }';
}

function svn_whatchanged() {
  command svn log -v | add_file_status_color | less
}

function svn_diff() {
  command svn diff $@ | colordiff | less
}

function svn_show() {
  svn_diff -c $@
}

function svn_log() {
  command svn log | less
}

function svn_st() {
  command svn st $@ | add_file_status_color
}

function svn_up() {
  command svn up $@ | add_file_status_color
}

function svn_revert-rev() {
  command svn diff -c $@ . | patch -R -p0
}

function svn_stash() {
  local files=$@
  if [ -z $files ]; then
    files="."
  fi

  diff=`command svn diff $files`
  if [ -z $diff ]; then
    echo 'There are not changes to be stashed'
    return
  fi

  mkdir -p .tmp
  local stash_file=stash-`date | tr ' ' '_'`
  echo $diff > .tmp/$stash_file
  svn revert -R $files
}

function svn_pop() {
  # TODO: find better way to get last modified file
  local last_stash=""
  for file in `ls -tr .tmp`; do
    last_stash=$file;
  done

  if [ -e $last_stash ]; then
    echo 'There is nothing stashed (check .tmp/ for stash files)'
    return
  fi

  last_stash=.tmp/$last_stash
  command svn patch $last_stash && rm $last_stash
}

function svn_authors() {
  command svn log -v --xml |
    grep '<author.*/author>' |
    sort $* |
    uniq -c |
    sort -rn |
    sed -e "s/\<author\>//g" |
    sed -e "s/\<\/author\>//g"
}

function svn() {
  cmd=$1;
  if type "svn_"$cmd > /dev/null 2>&1; then
    shift
    "svn_"$cmd $@
  else
    command svn $@
  fi
}
